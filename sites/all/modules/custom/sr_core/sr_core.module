<?php
/**
 * @file
 * Code for the SR Core feature.
 */

include_once 'sr_core.features.inc';


function sr_core_get_entities($type, $filter, $account = null) {
  $sql = '';
  if(!$account) {
    global $user;
    $account = $user;    
  }
  
  switch($filter) {
  	case 'favorites':
  	  $flags = flag_get_user_flags('node', null, $account->uid);
  	  $nodes = array();
  	  
  	  foreach($flags['multistream_favs'] as $nid => $flag) {
  	    $nids[$nid] = $nid; 
  	  }
  	  $nodes = node_load_multiple($nids);
  	  return $nodes;
  	  
  	  //TODO Finish
  	  $streams = flag_get_user_flags('stream', null, $account->uid);
  	  break;
  	case 'owned':
  	  if(!$account->uid) {
  	    return array();
  	  }
  	  $sql = "SELECT nid FROM {node} n WHERE n.type = 'multistream' AND status = 1 AND uid = $account->uid ORDER BY title ASC";  	 
  	  $nids = db_query($sql)->fetchAllKeyed(0,0);
  	  $nodes = node_load_multiple($nids);
  	  return $nodes;
  	    
  	  break;
  	case 'browse':

  	  break;
  	
  }
}

function sr_core_node_insert($node) {
  sr_core_node_save($node);
}

function sr_core_node_update($node) {
  sr_core_node_save($node);  
}

function sr_core_node_save($node) {
  if($node->type != 'multistream') {
    return;
  }
  
  flag('flag', 'multistream_favs', $node->nid);
}

function sr_core_entity_view_alter(&$build, $type) {
  if($type == 'node') {
    $node = $build['#node'];
    if($node->type != 'multistream') {
      return;
    }
    
    if($build['#view_mode'] == 'teaser') {
      $build['favorite'] = flag_create_link('multistream_favs', $node->nid);
    }
  }
}

function sr_core_preprocess_page(&$vars) {
  drupal_add_css(drupal_get_path('module', 'sr_core').'/css/sr_core.css');
  drupal_add_js(drupal_get_path('module', 'sr_core').'/js/sr_core.js');  
  drupal_add_library('system', 'ui.dialog');
}

function sr_core_form_user_register_form_alter(&$form, &$form_state) {
  drupal_add_css(drupal_get_path('module', 'sr_core').'/css/sr_core.css');
  drupal_add_js(drupal_get_path('module', 'sr_core').'/js/sr_core.js');  

  $form['message'] = array(
  	'#markup' => '<div>Create and share multi-streams with gamers around the world! Join us, it\'s fast and free!</div>',
    '#weight' => -100,
  );
  
  unset($form['account']['name']['#description']);  
  unset($form['account']['mail']['#description']);
  unset($form['account']['pass']['#description']);
  
  $form['account']['pass']['#pre_render'][] = 'sr_core_register_password_pre_render';
      
  $form['account']['name']['#attributes'] = array('alt'=>'Enter a username');
  $form['account']['mail']['#attributes'] = array('alt'=>'Enter E-mail address');
  
  $form['account']['name']['#size'] = 30;
  $form['account']['mail']['#size'] = 30;
  
  $form['actions']['submit']['#ajax'] = array(
      'event' => 'click',
      'callback' => 'sr_core_ajax_register_form_callback',
      'wrapper' => 'block-formblock-user-register',
      'method' => 'html',
      'effect' => 'fade',
  );
  $form['actions']['submit']['#id'] = 'user-register-submit';  
}

function sr_core_ajax_register_form_callback(&$form, &$form_state) {
  if(!$form_state['executed']) {
    return $form;
  }

  global $user;
  $commands[] = ajax_command_invoke('#block-formblock-user-register', 'dialog', array('close'));
  $commands[] = ajax_command_invoke(null, 'srUserLogin');
  return array('#type'=>'ajax', '#commands'=>$commands);
}

function sr_core_register_password_pre_render($element) {
  $element['pass1']['#attributes'] = array('alt'=>'Password');
  $element['pass2']['#attributes'] = array('alt'=>'Confirm Password');
  unset($element['pass1']['#description']);
  unset($element['pass2']['#description']);
  return $element;
}